name: update-IPlist

on:
  schedule:
    - cron: '0 */2 * * *' # 每2小时执行一次
  workflow_dispatch: # 手动触发

jobs:
  process-IPlist:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # 获取完整历史记录以便比较更改
      
    - name: Download with retry
      run: |
        mkdir -p IP-List
        max_retries=3
        retry_count=0
        
        until [ $retry_count -ge $max_retries ]
        do
          if curl -s "https://raw.githubusercontent.com/PBH-BTN/BTN-Collected-Rules/main/combine/all.txt" -o IP-List/BTN-IP-List-all-raw.txt; then
            echo "Download successful"
            break
          else
            retry_count=$((retry_count+1))
            echo "Download failed. Retry attempt $retry_count of $max_retries in 10 seconds..."
            sleep 10
          fi
        done
        
        if [ $retry_count -eq $max_retries ]; then
          echo "Download failed after $max_retries attempts"
          exit 1
        fi
        
    - name: Process IP list and generate hashes
      id: process
      run: |
        # 创建去除注释的版本
        grep -v '^#' IP-List/BTN-IP-List-all-raw.txt > IP-List/BTN-IP-List-all-clean.txt
        
        # 统计信息
        raw_count=$(wc -l < IP-List/BTN-IP-List-all-raw.txt)
        clean_count=$(wc -l < IP-List/BTN-IP-List-all-clean.txt)
        comment_count=$((raw_count - clean_count))
        echo "原始文件行数: $raw_count"
        echo "清理后行数: $clean_count"
        echo "注释行数: $comment_count"
        
        # 计算文件哈希值
        raw_hash=$(sha256sum IP-List/BTN-IP-List-all-raw.txt | cut -d' ' -f1)
        clean_hash=$(sha256sum IP-List/BTN-IP-List-all-clean.txt | cut -d' ' -f1)
        
        # 将哈希值写入单独的文件
        echo "$raw_hash" > IP-List/BTN-IP-List-all-raw.txt.sha256
        echo "$clean_hash" > IP-List/BTN-IP-List-all-clean.txt.sha256
        
        # 输出哈希值供后续步骤使用
        echo "raw_hash=$raw_hash" >> $GITHUB_OUTPUT
        echo "clean_hash=$clean_hash" >> $GITHUB_OUTPUT
        echo "raw_count=$raw_count" >> $GITHUB_OUTPUT
        echo "clean_count=$clean_count" >> $GITHUB_OUTPUT
        
    - name: Check for changes using hash files
      id: check_changes
      run: |
        # 检查哈希文件是否存在 - 如果不存在则直接判定为有变化
        
        # 添加调试输出
        echo "DEBUG: Checking file existence..."
        echo "Raw file exists: $([ -f "IP-List/BTN-IP-List-all-raw.txt.sha256" ] && echo "YES" || echo "NO")"
        echo "Clean file exists: $([ -f "IP-List/BTN-IP-List-all-clean.txt.sha256" ] && echo "YES" || echo "NO")"
        
        if [ ! -f "IP-List/BTN-IP-List-all-raw.txt.sha256" ] || [ ! -f "IP-List/BTN-IP-List-all-clean.txt.sha256" ]; then
          echo "Hash files don't exist - changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "has_changes: ${{ steps.check_changes.outputs.has_changes }}"
          exit 0
        fi
        
        # 读取之前保存的哈希值
        previous_raw_hash=$(cat IP-List/BTN-IP-List-all-raw.txt.sha256)
        previous_clean_hash=$(cat IP-List/BTN-IP-List-all-clean.txt.sha256)
        
        # 获取当前哈希值
        current_raw_hash="${{ steps.process.outputs.raw_hash }}"
        current_clean_hash="${{ steps.process.outputs.clean_hash }}"
        
        # 比较哈希值
        if [ "$current_raw_hash" = "$previous_raw_hash" ] && [ "$current_clean_hash" = "$previous_clean_hash" ]; then
          echo "No changes detected based on hash comparison"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected based on hash comparison"
          echo "Raw hash changed: $previous_raw_hash -> $current_raw_hash"
          echo "Clean hash changed: $previous_clean_hash -> $current_clean_hash"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Debug output
      run: |
        echo "Process step outputs:"
        echo "raw_hash: ${{ steps.process.outputs.raw_hash }}"
        echo "clean_hash: ${{ steps.process.outputs.clean_hash }}"
        echo "Check changes step outputs:"
        echo "has_changes: ${{ steps.check_changes.outputs.has_changes }}"
        
    - name: Commit and Push Changes
      if: ${{ steps.check_changes.outputs.has_changes == 'true' }}
      uses: actions-js/push@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        message: "Update IPlist - $(date +'%Y-%m-%d %H:%M') - Raw: ${{ steps.process.outputs.raw_count }}, Clean: ${{ steps.process.outputs.clean_count }}"
        directory: .